name: CD - Continuous Deployment

on:
  push:
    branches: [ main ]
  release:
    types: [ published ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  deploy-docs:
    runs-on: ubuntu-latest
    needs: build-and-push
    permissions:
      contents: read
      pages: write
      id-token: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install mkdocs mkdocs-material

    - name: Generate API documentation
      run: |
        mkdir -p docs/api
        python -c "
        from src.main import app
        import json
        
        openapi_schema = app.openapi()
        with open('docs/api/openapi.json', 'w') as f:
            json.dump(openapi_schema, f, indent=2)
        "

    - name: Create MkDocs config
      run: |
        cat > mkdocs.yml << EOF
        site_name: Todo API Documentation
        site_description: Documentação da API de Tarefas
        repo_url: https://github.com/${{ github.repository }}
        
        theme:
          name: material
          palette:
            - scheme: default
              primary: blue
              accent: blue
        
        nav:
          - Home: index.md
          - API Reference: api.md
        
        markdown_extensions:
          - admonition
          - codehilite
          - pymdownx.superfences
        EOF

    - name: Create documentation pages
      run: |
        mkdir -p docs
        cp README.md docs/index.md
        
        cat > docs/api.md << EOF
        # API Reference
        
        ## OpenAPI Specification
        
        A especificação completa da API está disponível em formato OpenAPI/Swagger.
        
        ### Endpoints Principais
        
        - **GET /**: Mensagem de boas-vindas
        - **GET /health**: Status da aplicação
        - **POST /tasks**: Criar nova tarefa
        - **GET /tasks**: Listar todas as tarefas
        - **GET /tasks/{id}**: Buscar tarefa por ID
        - **PUT /tasks/{id}**: Atualizar tarefa
        - **DELETE /tasks/{id}**: Deletar tarefa
        - **GET /tasks/status/{completed}**: Filtrar por status
        
        ### Acesso à Documentação Interativa
        
        - Swagger UI: \`/docs\`
        - ReDoc: \`/redoc\`
        EOF

    - name: Build documentation
      run: mkdocs build

    - name: Setup Pages
      uses: actions/configure-pages@v3

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v2
      with:
        path: site

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2
